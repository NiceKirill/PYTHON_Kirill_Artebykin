## Дана строка, содержащая латинские буквы и круглые скобки. Если скобки
## расставлены правильно (то есть каждой открывающей соответствует одна
## закрывающая), то вывести число 0. В противном случае вывести или номер позиции,
## в которой расположена первая ошибочная закрывающая скобка, или, если
## закрывающих скобок не хватает, число —1.

def check_brackets(s):
    stack = []  # Стек для хранения позиций открывающих скобок
    for i, char in enumerate(s):
        if char == '(':
            stack.append(i)  # Помещаем индекс открывающей скобки в стек
        elif char == ')':
            if not stack:  # Если стек пуст, значит, закрывающая скобка без пары
                return i  # Возврат позиции первой ошибочной закрывающей скобки
            stack.pop()  # Убираем соответствующую открывающую скобку из стека

    # Если после прохода по строке остались символы в стеке, значит, не хватало закрывающих скобок
    return -1 if stack else 0


# Тестирование функции
tests = [
    "((()))",  # Балансирован
    "(()))(",  # Первая ошибочная закрывающая скобка на позиции 4
    "())",  # Не хватает закрывающих скобок
    "(())",  # Балансирован
    ")))",  # Первая ошибочная закрывающая скобка на позиции 0
    "("  # Не хватает закрывающих скобок
]

for test in tests:
    try:

       result = check_brackets(test)
       print(f'Строка "{test}" -> Результат: {result}')

    except ValueError as e:
        print(f'Строка "{test}" -> Ошибка: {e}')

